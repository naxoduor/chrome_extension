{"ast":null,"code":"/*global chrome*/import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminMessages=()=>{const[messages,setMessages]=useState([]);useEffect(()=>{// Fetch messages from Chrome storage or an external source\n// chrome.storage.local.get(['adminMessages'], (result) => {\n//   console.log(\"print message stored in chrome\")\n//   console.log(result)\n//   console.log(\"proceed\")\n//   result.adminMessages.map((msg, index) => {\n//     console.log(\"print individual messages\")\n//     console.log(msg.content)\n//   })\n// });\nchrome.storage.local.get(['adminMessages'],result=>{setMessages(result);});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"})]});};export default AdminMessages;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminMessages","messages","setMessages","chrome","storage","local","get","result","children"],"sources":["/home/nax/chrome-extension/react-chrome-app/popup/src/AdminMessages.js"],"sourcesContent":["    /*global chrome*/\n\nimport React, { useState, useEffect } from 'react';\n\nconst AdminMessages = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    // Fetch messages from Chrome storage or an external source\n\n    // chrome.storage.local.get(['adminMessages'], (result) => {\n    //   console.log(\"print message stored in chrome\")\n    //   console.log(result)\n    //   console.log(\"proceed\")\n    //   result.adminMessages.map((msg, index) => {\n    //     console.log(\"print individual messages\")\n    //     console.log(msg.content)\n    //   })\n    // });\n\n\n    chrome.storage.local.get(['adminMessages'], (result) => {\n        setMessages(result);       \n    });\n  }, []\n);\n\n  return (\n    <div>\n      <h3>Admin Messages</h3>\n      <h3>Admin Messages</h3>\n      <h3>Admin Messages</h3>\n      <h3>Admin Messages</h3>\n\n      {/* <ul>\n        {messages.length > 0 ? (\n          messages.adminMessages.map((msg, index) => <li key={index}>{msg.content}</li>)\n        ) : (\n          <li>No new messages</li>\n        )}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default AdminMessages;\n"],"mappings":"AAAI,iBAEJ,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAQ,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAGC,MAAM,EAAK,CACpDL,WAAW,CAACK,MAAM,CAAC,CACvB,CAAC,CAAC,CACJ,CAAC,CAAE,EACL,CAAC,CAEC,mBACER,KAAA,QAAAS,QAAA,eACEX,IAAA,OAAAW,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBX,IAAA,OAAAW,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBX,IAAA,OAAAW,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBX,IAAA,OAAAW,QAAA,CAAI,gBAAc,CAAI,CAAC,EASpB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}