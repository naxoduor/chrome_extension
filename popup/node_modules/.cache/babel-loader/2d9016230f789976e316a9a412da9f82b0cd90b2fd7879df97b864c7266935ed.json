{"ast":null,"code":"/*global chrome*/import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminMessages=()=>{const[messages,setMessages]=useState([]);useEffect(()=>{// Fetch messages from Chrome storage or an external source\nchrome.storage.local.get(['adminMessages'],result=>{console.log(\"print message stored in chrome\");console.log(result);console.log(\"proceed\");result.adminMessages.map((msg,index)=>{console.log(\"print individual messages\");console.log(msg.content);});});chrome.storage.local.get(['adminMessages'],result=>{if(result.adminMessages){setMessages(result);console.log(\"fetch the damn messages\");console.log(result.adminMessages);}});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"}),/*#__PURE__*/_jsx(\"ul\",{children:messages.length>0?messages.adminMessages.map((msg,index)=>/*#__PURE__*/_jsx(\"li\",{children:msg.content},index)):/*#__PURE__*/_jsx(\"li\",{children:\"No new messages\"})})]});};export default AdminMessages;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminMessages","messages","setMessages","chrome","storage","local","get","result","console","log","adminMessages","map","msg","index","content","children","length"],"sources":["/home/nax/chrome-extension/react-chrome-app/popup/src/AdminMessages.js"],"sourcesContent":["    /*global chrome*/\n\nimport React, { useState, useEffect } from 'react';\n\nconst AdminMessages = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    // Fetch messages from Chrome storage or an external source\n\n    chrome.storage.local.get(['adminMessages'], (result) => {\n      console.log(\"print message stored in chrome\")\n      console.log(result)\n      console.log(\"proceed\")\n      result.adminMessages.map((msg, index) => {\n        console.log(\"print individual messages\")\n        console.log(msg.content)\n      })\n    });\n\n\n    chrome.storage.local.get(['adminMessages'], (result) => {\n      if (result.adminMessages) {\n        setMessages(result);\n        console.log(\"fetch the damn messages\")\n        console.log(result.adminMessages)\n      }\n    });\n  }, []\n);\n\n  return (\n    <div>\n      <h3>Admin Messages</h3>\n      <ul>\n        {messages.length > 0 ? (\n          messages.adminMessages.map((msg, index) => <li key={index}>{msg.content}</li>)\n        ) : (\n          <li>No new messages</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminMessages;\n"],"mappings":"AAAI,iBAEJ,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AAEAQ,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAGC,MAAM,EAAK,CACtDC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7CD,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CACnBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBF,MAAM,CAACG,aAAa,CAACC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CACvCL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxCD,OAAO,CAACC,GAAG,CAACG,GAAG,CAACE,OAAO,CAAC,CAC1B,CAAC,CAAC,CACJ,CAAC,CAAC,CAGFX,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAGC,MAAM,EAAK,CACtD,GAAIA,MAAM,CAACG,aAAa,CAAE,CACxBR,WAAW,CAACK,MAAM,CAAC,CACnBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,aAAa,CAAC,CACnC,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,EACL,CAAC,CAEC,mBACEX,KAAA,QAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBlB,IAAA,OAAAkB,QAAA,CACGd,QAAQ,CAACe,MAAM,CAAG,CAAC,CAClBf,QAAQ,CAACS,aAAa,CAACC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBAAKhB,IAAA,OAAAkB,QAAA,CAAiBH,GAAG,CAACE,OAAO,EAAnBD,KAAwB,CAAC,CAAC,cAE9EhB,IAAA,OAAAkB,QAAA,CAAI,iBAAe,CAAI,CACxB,CACC,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}