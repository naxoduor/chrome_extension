{"ast":null,"code":"/*global chrome*/import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminMessages=()=>{const[messages,setMessages]=useState(null);useEffect(()=>{// chrome.storage.local.get(['adminMessages'], (result) => {\n//  const response = await JSON.parse(result.adminMessages)\nsetMessages(\"message\");// })\n},[]);// const [data, setData] = useState(null);\n// const [loading, setLoading] = useState(true);\n// useEffect(() => {\n//   const fetchData = async () => {\n// try {\n// const result = await chrome.storage.sync.get(['adminMessages'])\n// console.log(\"fetch the bamn data\")\n// const result = await response.json();\n// setData(JSON.parse(result.adminMessages));\n// setData([\"Data\"])\n// } catch (error) {\n// console.error('Error fetching data:', error);\n// } finally {\n// setLoading(false);\n//     }\n//   };\n//   fetchData();\n// }, []); \n// if (loading) return <div>Loading...</div>;\n// return <div>Data: {data}</div>;\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Admin Messages\"}),/*#__PURE__*/_jsx(\"ul\",{children:messages.length>0?messages.map((msg,index)=>/*#__PURE__*/_jsx(\"li\",{children:\"ONE\"},index)):/*#__PURE__*/_jsx(\"li\",{children:\"No new messages\"})})]});};export default AdminMessages;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminMessages","messages","setMessages","children","length","map","msg","index"],"sources":["/home/nax/chrome-extension/react-chrome-app/popup/src/AdminMessages.js"],"sourcesContent":["    /*global chrome*/\n\nimport React, { useState, useEffect } from 'react';\n\nconst AdminMessages = () => {\n  const [messages, setMessages] = useState(null);\n\n  useEffect(() => {\n    // chrome.storage.local.get(['adminMessages'], (result) => {\n    //  const response = await JSON.parse(result.adminMessages)\n     setMessages(\"message\")\n  // })\n  }, []\n);\n\n\n// const [data, setData] = useState(null);\n// const [loading, setLoading] = useState(true);\n\n// useEffect(() => {\n//   const fetchData = async () => {\n    // try {\n      // const result = await chrome.storage.sync.get(['adminMessages'])\n      // console.log(\"fetch the bamn data\")\n      // const result = await response.json();\n      // setData(JSON.parse(result.adminMessages));\n      // setData([\"Data\"])\n    // } catch (error) {\n      // console.error('Error fetching data:', error);\n    // } finally {\n      // setLoading(false);\n//     }\n//   };\n\n//   fetchData();\n// }, []); \n\n// if (loading) return <div>Loading...</div>;\n// return <div>Data: {data}</div>;\n\n  return (\n    <div>\n      <h3>Admin Messages</h3>\n      <ul>\n        {messages.length > 0 ? (\n          messages.map((msg, index) => <li key={index}>ONE</li>)\n        ) : (\n          <li>No new messages</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminMessages;\n"],"mappings":"AAAI,iBAEJ,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd;AACA;AACCO,WAAW,CAAC,SAAS,CAAC,CACzB;AACA,CAAC,CAAE,EACL,CAAC,CAGD;AACA;AAEA;AACA;AACI;AACE;AACA;AACA;AACA;AACA;AACF;AACE;AACF;AACE;AACN;AACA;AAEA;AACA;AAEA;AACA;AAEE,mBACEH,KAAA,QAAAI,QAAA,eACEN,IAAA,OAAAM,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBN,IAAA,OAAAM,QAAA,CACGF,QAAQ,CAACG,MAAM,CAAG,CAAC,CAClBH,QAAQ,CAACI,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBAAKV,IAAA,OAAAM,QAAA,CAAgB,KAAG,EAAVI,KAAc,CAAC,CAAC,cAEtDV,IAAA,OAAAM,QAAA,CAAI,iBAAe,CAAI,CACxB,CACC,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}