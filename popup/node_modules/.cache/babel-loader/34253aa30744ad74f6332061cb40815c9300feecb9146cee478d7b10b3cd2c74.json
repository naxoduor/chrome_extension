{"ast":null,"code":"var _jsxFileName = \"/home/nax/chrome-extension/react-chrome-app/popup/src/AdminMessages.js\",\n  _s = $RefreshSig$();\n/*global chrome*/\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminMessages = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Fetch messages from Chrome storage or an external source\n    // chrome.storage.local.get(['adminMessages'], (result) => {\n    //   if (result.adminMessages) {\n    //     setMessages(result.adminMessages);\n    //   }\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Admin Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No new messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminMessages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = AdminMessages;\nexport default AdminMessages;\nvar _c;\n$RefreshReg$(_c, \"AdminMessages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminMessages","_s","messages","setMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","_c","$RefreshReg$"],"sources":["/home/nax/chrome-extension/react-chrome-app/popup/src/AdminMessages.js"],"sourcesContent":["    /*global chrome*/\n\nimport React, { useState, useEffect } from 'react';\n\nconst AdminMessages = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    // Fetch messages from Chrome storage or an external source\n    // chrome.storage.local.get(['adminMessages'], (result) => {\n    //   if (result.adminMessages) {\n    //     setMessages(result.adminMessages);\n    //   }\n    // });\n  }, []\n);\n\n  return (\n    <div>\n      <h3>Admin Messages</h3>\n      <ul>\n        {messages.length > 0 ? (\n          messages.map((msg, index) => <li key={index}>{msg}</li>)\n        ) : (\n          <li>No new messages</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminMessages;\n"],"mappings":";;AAAI;;AAEJ,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,EAAE,EACL,CAAC;EAEC,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBT,OAAA;MAAAK,QAAA,EACGF,QAAQ,CAACO,MAAM,GAAG,CAAC,GAClBP,QAAQ,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAAKb,OAAA;QAAAK,QAAA,EAAiBO;MAAG,GAAXC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,CAAC,gBAExDT,OAAA;QAAAK,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACP,EAAA,CAzBID,aAAa;AAAAa,EAAA,GAAbb,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}